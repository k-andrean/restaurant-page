(()=>{"use strict";var n={653:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".hero-text{\n    display: flex; \n    justify-content: center; \n    align-items: center; \n    \n    color: white; \n    \n    margin-bottom: 1em;\n}\n\n\n.para-text{\n    text-align: justify; \n    font-size: 20px; \n    \n    color: white; \n    \n    white-space: pre-line; \n    \n    margin-bottom: 2em;\n}\n\n.image-container{\n    display: flex;\n    justify-content: center;\n}\n\n.image-container > img{\n    width: 500px;\n    height: 250px;\n}","",{version:3,sources:["webpack://./src/css/about.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;;IAEnB,YAAY;;IAEZ,kBAAkB;AACtB;;;AAGA;IACI,mBAAmB;IACnB,eAAe;;IAEf,YAAY;;IAEZ,qBAAqB;;IAErB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,uBAAuB;AAC3B;;AAEA;IACI,YAAY;IACZ,aAAa;AACjB",sourcesContent:[".hero-text{\r\n    display: flex; \r\n    justify-content: center; \r\n    align-items: center; \r\n    \r\n    color: white; \r\n    \r\n    margin-bottom: 1em;\r\n}\r\n\r\n\r\n.para-text{\r\n    text-align: justify; \r\n    font-size: 20px; \r\n    \r\n    color: white; \r\n    \r\n    white-space: pre-line; \r\n    \r\n    margin-bottom: 2em;\r\n}\r\n\r\n.image-container{\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n\r\n.image-container > img{\r\n    width: 500px;\r\n    height: 250px;\r\n}"],sourceRoot:""}]);const s=i},446:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".address-para,\n.number-para {\n    text-align: justify;\n    font-size: 20px;\n\n    color: white;\n\n    margin: 1em 0;\n}\n\n.contact-text{\n    display: flex; \n    justify-content: center; \n    align-items: center; \n    \n    color: white; \n    \n    margin-bottom: 1em;\n}\n\n\n.photo-container{\n    display: flex;\n    justify-content: center;\n}\n\n.photo-container > img{\n    width: 400px;\n    height: 300px;\n}","",{version:3,sources:["webpack://./src/css/contact.css"],names:[],mappings:"AAAA;;IAEI,mBAAmB;IACnB,eAAe;;IAEf,YAAY;;IAEZ,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;;IAEnB,YAAY;;IAEZ,kBAAkB;AACtB;;;AAGA;IACI,aAAa;IACb,uBAAuB;AAC3B;;AAEA;IACI,YAAY;IACZ,aAAa;AACjB",sourcesContent:[".address-para,\r\n.number-para {\r\n    text-align: justify;\r\n    font-size: 20px;\r\n\r\n    color: white;\r\n\r\n    margin: 1em 0;\r\n}\r\n\r\n.contact-text{\r\n    display: flex; \r\n    justify-content: center; \r\n    align-items: center; \r\n    \r\n    color: white; \r\n    \r\n    margin-bottom: 1em;\r\n}\r\n\r\n\r\n.photo-container{\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n\r\n.photo-container > img{\r\n    width: 400px;\r\n    height: 300px;\r\n}"],sourceRoot:""}]);const s=i},434:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".food-text{\n    font-size: 32px;\n\n    color: white;\n}\n\n.small-text{\n    font-size: 20px;\n    font-style: italic;\n    \n    color: white;\n\n}","",{version:3,sources:["webpack://./src/css/home.css"],names:[],mappings:"AAAA;IACI,eAAe;;IAEf,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,kBAAkB;;IAElB,YAAY;;AAEhB",sourcesContent:[".food-text{\r\n    font-size: 32px;\r\n\r\n    color: white;\r\n}\r\n\r\n.small-text{\r\n    font-size: 20px;\r\n    font-style: italic;\r\n    \r\n    color: white;\r\n\r\n}"],sourceRoot:""}]);const s=i},340:(n,e,t)=>{t.d(e,{Z:()=>p});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),s=t(667),c=t.n(s),d=new URL(t(25),t.b),l=i()(o()),A=c()(d);l.push([n.id,`@font-face {\n    font-family: 'Merienda';\n    src: url(${A}) format('ttf');\n    font-weight: normal;\n    font-style: italic;\n}\n\n*{\n    margin: 0;\n    padding: 0;\n\n    box-sizing: border-box;\n\n}\n\nbody {\n    font-family: 'Merienda', cursive;\n}`,"",{version:3,sources:["webpack://./src/css/index.css"],names:[],mappings:"AAAA;IACI,uBAAuB;IACvB,0DAAsD;IACtD,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,SAAS;IACT,UAAU;;IAEV,sBAAsB;;AAE1B;;AAEA;IACI,gCAAgC;AACpC",sourcesContent:["@font-face {\r\n    font-family: 'Merienda';\r\n    src: url('../font/Merienda-Regular.ttf') format('ttf');\r\n    font-weight: normal;\r\n    font-style: italic;\r\n}\r\n\r\n*{\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    box-sizing: border-box;\r\n\r\n}\r\n\r\nbody {\r\n    font-family: 'Merienda', cursive;\r\n}"],sourceRoot:""}]);const p=l},113:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".menu-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    color: black;\n    margin: 0.5rem 0;\n}\n\n.price-tag {\n    background-color: #333;\n    color: white;\n    padding: 5px 10px;\n    border-radius: 5px;\n    border: 1px solid #555;\n}\n\n.top-text{\n    display: flex; \n    align-items: center; \n    justify-content: center;\n\n    grid-area: 'toptext';\n    \n    font-size: 25px; \n    \n    color: white; \n    \n    background-color: red;  \n}\n\n.menu-content{\n    background-color: white; \n    grid-area: 'menucontent'; \n    \n    padding: 0.5rem;\n}\n\n.menu-box{\n    width: 60%; \n    height: 90%; \n\n    display: grid; \n    grid-template-rows: 1fr 5fr;\n    grid-template-areas:\n        \"toptext\"\n        \"menucontent\"\n    ;\n}","",{version:3,sources:["webpack://./src/css/menu.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,sBAAsB;IACtB,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;IAClB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;;IAEvB,oBAAoB;;IAEpB,eAAe;;IAEf,YAAY;;IAEZ,qBAAqB;AACzB;;AAEA;IACI,uBAAuB;IACvB,wBAAwB;;IAExB,eAAe;AACnB;;AAEA;IACI,UAAU;IACV,WAAW;;IAEX,aAAa;IACb,2BAA2B;IAC3B;;;IAGA;AACJ",sourcesContent:[".menu-item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    color: black;\r\n    margin: 0.5rem 0;\r\n}\r\n\r\n.price-tag {\r\n    background-color: #333;\r\n    color: white;\r\n    padding: 5px 10px;\r\n    border-radius: 5px;\r\n    border: 1px solid #555;\r\n}\r\n\r\n.top-text{\r\n    display: flex; \r\n    align-items: center; \r\n    justify-content: center;\r\n\r\n    grid-area: 'toptext';\r\n    \r\n    font-size: 25px; \r\n    \r\n    color: white; \r\n    \r\n    background-color: red;  \r\n}\r\n\r\n.menu-content{\r\n    background-color: white; \r\n    grid-area: 'menucontent'; \r\n    \r\n    padding: 0.5rem;\r\n}\r\n\r\n.menu-box{\r\n    width: 60%; \r\n    height: 90%; \r\n\r\n    display: grid; \r\n    grid-template-rows: 1fr 5fr;\r\n    grid-template-areas:\r\n        \"toptext\"\r\n        \"menucontent\"\r\n    ;\r\n}"],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],s=0;s<n.length;s++){var c=n[s],d=r.base?c[0]+r.base:c[0],l=a[d]||0,A="".concat(d," ").concat(l);a[d]=l+1;var p=t(A),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,r);r.byIndex=s,e.splice(s,0,{identifier:A,updater:m,references:1})}i.push(A)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var c=r(n,o),d=0;d<a.length;d++){var l=t(a[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},25:(n,e,t)=>{n.exports=t.p+"69f026d4d19f0083af71.ttf"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!n;)n=r[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{const n=t.p+"2f10689597035f58c904.jpg";var e=t(379),r=t.n(e),o=t(795),a=t.n(o),i=t(569),s=t.n(i),c=t(565),d=t.n(c),l=t(216),A=t.n(l),p=t(589),u=t.n(p),m=t(434),f={};f.styleTagTransform=u(),f.setAttributes=d(),f.insert=s().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=A(),r()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals;const h=JSON.parse('[{"name":"Rendang Daging","price":"Rp 28000","description":"Meat braised in a coconut milk seasoned with a herb and spice ."},{"name":"Nasi Goreng","price":"Rp 20000","description":"Cooked rice that has been stir-fried in frying pan mixed with eggs, vegetables, seafood, or meat."},{"name":"Ayam Geprek","price":"Rp 28000","description":"Fried chicken smashed and mixed together with hot and spicy sambal chili paste."},{"name":"Ayam Gulai","price":"Rp 28000","description":"Chicken cuts that are slowly simmered in a complex, spicy sauce which is based on coconut milk."},{"name":"Mie Goreng","price":"Rp 20000","description":" Fried noodle dish made with yellow/wheat noodles and tastes sweet and savory."},{"name":"Telur Dadar","price":"Rp 15000","description":"Indonesian-style omelette that is fluffy and delicious."}]'),g=t.p+"888415f421867ef59165.jpg";var b=t(113),x={};x.styleTagTransform=u(),x.setAttributes=d(),x.insert=s().bind(null,"head"),x.domAPI=a(),x.insertStyleElement=A(),r()(b.Z,x),b.Z&&b.Z.locals&&b.Z.locals;const C=t.p+"893ed969b3990f9f9e3d.jpg";var y=t(653),B={};B.styleTagTransform=u(),B.setAttributes=d(),B.insert=s().bind(null,"head"),B.domAPI=a(),B.insertStyleElement=A(),r()(y.Z,B),y.Z&&y.Z.locals&&y.Z.locals;var I=t(446),v={};v.styleTagTransform=u(),v.setAttributes=d(),v.insert=s().bind(null,"head"),v.domAPI=a(),v.insertStyleElement=A(),r()(I.Z,v),I.Z&&I.Z.locals&&I.Z.locals;const w=t.p+"7aa6fe06733c74a505a0.png";var E=t(340),k={};k.styleTagTransform=u(),k.setAttributes=d(),k.insert=s().bind(null,"head"),k.domAPI=a(),k.insertStyleElement=A(),r()(E.Z,k),E.Z&&E.Z.locals&&E.Z.locals;const j={home:function(e){const t=new Image;t.src=n;const r=document.createElement("p");r.classList.add("food-text"),r.textContent="Rendang Resto";const o=document.createElement("p");o.classList.add("small-text"),o.textContent="Indonesian local style cuisine restaurant",e.appendChild(r),e.appendChild(o),e.style.cssText=`\n        background-image: url(${t.src});\n        background-size: cover; \n        background-position: center center; \n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        grid-area: maincontent;\n        width: 100%;\n        height: 100%;\n    `},menu:function(n){const e=new Image;e.src=g;const t=document.createElement("div");t.classList.add("menu-box");const r=document.createElement("div");r.classList.add("top-text"),r.textContent="Menu";const o=document.createElement("div");o.classList.add("menu-content"),h.forEach((n=>{const e=document.createElement("div");e.classList.add("menu-item");const t=document.createElement("h2");t.innerHTML=`<b>${n.name}</b>`;const r=document.createElement("span");r.classList.add("price-tag"),r.textContent=n.price;const a=document.createElement("p");a.textContent=n.description,e.appendChild(t),e.appendChild(r),o.appendChild(e),o.appendChild(a)})),t.appendChild(r),t.appendChild(o),n.appendChild(t),n.style.cssText=`\n    background-image: url(${e.src});\n    background-size: cover; \n    background-position: center center; \n    display: flex;\n    align-items: center;\n    justify-content: center;\n    grid-area: maincontent;\n    width: 100%;\n    height: 100%;\n`},about:function(n){const e=document.createElement("h1");e.classList.add("hero-text"),e.textContent="About";const t=document.createElement("p");t.classList.add("para-text"),t.textContent="\n     Our restaurant is established around 2023 with aim to provide authentic local indonesian cuisine taste which involve mixture of spice.\n     Founder has immense respect and is fond of traditional curry based food from southeast asia particularly from indonesia.The taste is perfected through continual refining of spicing and braising process to serve the best authentic dishes.\n     \n     We will continually improve and refine our food tastes so that it matched customer taste and local preferences.\n    ";const r=document.createElement("div");r.classList.add("image-container");const o=document.createElement("img");o.src=C,o.setAttribute("alt","Restaurant Photo"),r.appendChild(o),n.appendChild(e),n.appendChild(t),n.appendChild(r),n.style.cssText="\n    background-color: brown;\n    grid-area: maincontent;\n    width: 100%;\n    height: 100%;\n    padding: 2em;\n"},contact:function(n){const e=document.createElement("h1");e.classList.add("contact-text"),e.textContent="Contact";const t=document.createElement("p");t.classList.add("address-para"),t.textContent="Find us at Jl.unnamed road, rt 9 rw 10, Batam area around bengkong location after main road";const r=document.createElement("p");r.classList.add("number-para"),r.textContent="Any inquiry or booking you can call us at Telp: 0778 4231231 or our restaurant manager Cp Kel: 082123131231";const o=document.createElement("div");o.classList.add("photo-container");const a=document.createElement("img");a.src=w,a.setAttribute("alt","Location Photo"),o.appendChild(a),n.appendChild(e),n.appendChild(t),n.appendChild(o),n.appendChild(r),n.style.cssText="\n    background-color: darkgray;\n    grid-area: maincontent;\n    width: 100%;\n    height: 100%;\n    padding: 2em;\n"}};let Z;document.body.appendChild(function(){const n=document.getElementById("content"),e=function(){const n=document.createElement("div");n.classList.add("navbar");const e=["Home","About","Menu","Contact"];for(let t=0;t<e.length;t++){const r=document.createElement("a");r.classList.add("link-button"),r.href=e[t].toLowerCase(),r.textContent=e[t],r.style.cssText="margin-left: 1rem; color: white; text-decoration: none;",n.appendChild(r)}return n.style.cssText="display:flex; align-items: center; justify-content: flex-start; background-color: red; grid-area: navbar; min-height: 100%; position: sticky; top: 0; z-index: 1000;",n}();console.log(e);const t=document.createElement("div");return t.classList.add("main-content"),n.appendChild(e),j.home(t),Z="home",e.querySelectorAll(".link-button").forEach((n=>{n.addEventListener("click",(function(n){n.preventDefault();const e=n.target.textContent.toLowerCase();e in j&&Z!==e?(t.innerHTML="",j[e](t),Z=e):console.log("Function not found")}))})),n.appendChild(t),n.style.cssText='\n    box-sizing: border-box;\n    min-height: 100vh;\n    display: grid;\n    grid-template-rows: 1fr 6fr;\n    grid-template-columns: 7fr;\n    grid-template-areas:\n        "navbar"\n        "maincontent"\n    ; \n    align-items: center;\n    justify-content: center;\n',n}())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,